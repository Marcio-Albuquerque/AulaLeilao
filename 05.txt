###### Teste para evitar 5 lances na classe LeilaoTest
@Test
    public void naoDeveAceitarMaisDoQue5LancesDeUmMesmoUsuario() {
        Leilao leilao = new Leilao("Macbook Pro 15");
        Usuario steveJobs = new Usuario("Steve Jobs");
        Usuario billGates = new Usuario("Bill Gates");

        leilao.propoe(new Lance(steveJobs, 2000));
        leilao.propoe(new Lance(billGates, 3000));
        leilao.propoe(new Lance(steveJobs, 4000));
        leilao.propoe(new Lance(billGates, 5000));
        leilao.propoe(new Lance(steveJobs, 6000));
        leilao.propoe(new Lance(billGates, 7000));
        leilao.propoe(new Lance(steveJobs, 8000));
        leilao.propoe(new Lance(billGates, 9000));
        leilao.propoe(new Lance(steveJobs, 10000));
        leilao.propoe(new Lance(billGates, 11000));

        // deve ser ignorado
        leilao.propoe(new Lance(steveJobs, 12000));

        assertEquals(10, leilao.getLances().size());
        int ultimo = leilao.getLances().size() - 1;
        Lance ultimoLance = leilao.getLances().get(ultimo);
        assertEquals(11000.0, ultimoLance.getValor(), 0.00001);
    }

###### Modificação método propõe da clase Leilao
public void propoe(Lance lance) {

        int total = 0;
        for(Lance l : lances) {
            if(l.getUsuario().equals(lance.getUsuario())) total++;
        }

        if(lances.isEmpty() || 
            (!ultimoLanceDado().getUsuario().equals(lance.getUsuario()) 
                && total < 5)) {
            lances.add(lance);
        }
    }

###### Refatoração 1 metodo propoe
public void propoe(Lance lance) {
        if(lances.isEmpty() || (
        !ultimoLanceDado().getUsuario().equals(lance.getUsuario()) && 
        qtdDelancesDo(lance.getUsuario()) < 5)) {
            lances.add(lance);
        }
    }

    private int qtdDelancesDo(Usuario usuario) {
        int total = 0;
        for(Lance lance : lances) {
            if(lance.getUsuario().equals(usuario)) total++;
        }
        return total;
    }

###### Refatoração 2 
public void propoe(Lance lance) {
        if(lances.isEmpty() || podeDarLance(lance.getUsuario())) {
            lances.add(lance);
        }
    }

    private boolean podeDarLance(Usuario usuario) {
        return !ultimoLanceDado().getUsuario().equals(usuario) 
            && qtdDelancesDo(usuario) < 5;
    }